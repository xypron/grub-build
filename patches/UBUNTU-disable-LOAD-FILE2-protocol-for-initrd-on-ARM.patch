From: Heinrich Schuchardt <heinrich.schuchardt@canonical.com>
Date: Wed, 13 Apr 2022 18:51:37 +0200
Subject: [PATCH 1/1] UBUNTU: disable LOAD FILE2 protocol for initrd on ARM

RISC-V cannot load the initrd without the LOAD FILE2 protocol.

Currently the LOAD FILE2 protocol does not work with PXE due to a preboot
hook invoking grub_net_fini_hw().

So let's disable this for ARM until a solution has been agreed on with
upstream.

Signed-off-by: Heinrich Schuchardt <heinrich.schuchardt@canonical.com>
---
 grub-core/loader/efi/linux.c       | 12 ++++++++++++
 grub-core/net/drivers/efi/efinet.c |  2 +-
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/grub-core/loader/efi/linux.c b/grub-core/loader/efi/linux.c
index 24abc0c0b..6e70f59fa 100644
--- a/grub-core/loader/efi/linux.c
+++ b/grub-core/loader/efi/linux.c
@@ -68,7 +68,9 @@ grub_err_t
 grub_arch_efi_linux_check_image (struct linux_arch_kernel_header * lh)
 {
   struct grub_pe32_coff_header *coff_header;
+#ifdef __riscv  
   struct grub_pe32_optional_header *optional_header;
+#endif
 
   if (lh->magic != GRUB_LINUX_ARCH_MAGIC_SIGNATURE)
     return grub_error(GRUB_ERR_BAD_OS, "invalid magic number");
@@ -87,10 +89,20 @@ grub_arch_efi_linux_check_image (struct linux_arch_kernel_header * lh)
    * Linux kernels built for any architecture are guaranteed to support the
    * LoadFile2 based initrd loading protocol if the image version is >= 1.
    */
+#ifdef __riscv
+  /*
+   * RISC-V cannot load the initrd without the LOAD FILE2 protocol.
+   *
+   * Currently the LOAD FILE2 protocol does not work with PXE due to a preboot
+   * hook invoking grub_net_fini_hw().
+   *
+   * TODO: clarify if the preboot hook is needed
+   */
   if (optional_header->major_image_version >= 1)
     initrd_use_loadfile2 = 1;
    else
     initrd_use_loadfile2 = 0;
+#endif
 
   grub_dprintf ("linux", "LoadFile2 initrd loading %sabled\n",
 		initrd_use_loadfile2 ? "en" : "dis");
diff --git a/grub-core/net/drivers/efi/efinet.c b/grub-core/net/drivers/efi/efinet.c
index 1d19aae0e..e5e301b74 100644
--- a/grub-core/net/drivers/efi/efinet.c
+++ b/grub-core/net/drivers/efi/efinet.c
@@ -40,7 +40,7 @@ send_card_buffer (struct grub_net_card *dev,
 {
   grub_efi_status_t st;
   grub_efi_simple_network_t *net = dev->efi_net;
-  grub_uint64_t limit_time = grub_get_time_ms () + 4000;
+  grub_uint64_t limit_time = grub_get_time_ms () + 40000;
   grub_uint64_t new_time;
   void *txbuf;
 
